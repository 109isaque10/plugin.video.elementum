import sys

from kodi_six import xbmc

from elementum.addon import ADDON

from platform_detect.python.platform import detect_platform

def get_platform():
    try:
        binary_platform = ADDON.getSetting("binary_platform")
    except:
        binary_platform = "auto"
        pass

    build = xbmc.getInfoLabel("System.BuildVersion")
    kodi_version = int(build.split()[0][:2])

    if binary_platform and "auto" not in binary_platform.lower():
        custom = binary_platform.split('_')
        if len(custom) > 1:
            return {
                "os": custom[0],
                "arch": custom[1],
                "fork": True,
                "version": "",
                "kodi": kodi_version,
                "build": build
            }

    ret = {
        "auto_arch": sys.maxsize > 2 ** 32 and "64-bit" or "32-bit",
        "arch": sys.maxsize > 2 ** 32 and "x64" or "x86",
        "os": "",
        "version": "",
        "kodi": kodi_version,
        "build": build,
        "fork": True,
        "machine": "",
        "system": "",
        "platform": ""
    }

    auto_platform = detect_platform()
    if not auto_platform or '-' not in auto_platform:
        return ret

    auto_arch = auto_platform.split('-')
    ret["os"] = auto_arch[0]
    ret["arch"] = auto_arch[1]

    return ret


PLATFORM = get_platform()
